// @File(label="Input directory", description="Select the directory with input images", style="directory") inputDir
// @File(label="Output directory", description="Select the output directory", style="directory") outputDir
// @File(label="Weka model", description="Select the Weka model to apply") modelPath
// @String(label="Result mode",choices={"Labels","Probabilities"}) resultMode

// based on IJ forum thread http://forum.imagej.net/t/use-trainable-weka-segmentation-through-macro/4565/19

// seems to save the label image regardless of selection of probabilities in the pulldown

import trainableSegmentation.WekaSegmentation;
import ij.io.FileSaver;
import ij.IJ;
import ij.ImagePlus;
 
// starting time
startTime = System.currentTimeMillis();
 
// calculate probabilities?
getProbs = false;
 
// get list of input images
listOfFiles = inputDir.listFiles();
for ( i = 0; i < listOfFiles.length; i++ )
{
    // process only files (do not go into sub-folders)
    if (listOfFiles[ i ].isFile())
    {
        // try to read file as image
        image = new ImagePlus( listOfFiles[i].getCanonicalPath() );
        if( image != null )
        {       
            // create segmentator
            segmentator = new WekaSegmentation( image );
            // load classifier
            segmentator.loadClassifier( modelPath.getCanonicalPath() );
            // apply classifier and get results
            segmentator.applyClassifier( getProbs );
            result = segmentator.getClassifiedImage();
 
            // save result as TIFF in output folder
            outputFileName = listOfFiles[ i ].getName().replaceFirst("[.][^.]+$", "") + ".tif";
            new FileSaver( result ).saveAsTiff( outputDir.getPath() + File.separator + outputFileName );
 
            // force garbage collection (important for large images)
            segmentator = null;
            result = null; 
            image = null;
            System.gc();
        }
    }
}
// print elapsed time
estimatedTime = System.currentTimeMillis() - startTime;
IJ.log( "** Finished processing folder in " + estimatedTime + " ms **" );
